---
on:
  workflow_call:
    inputs:
      VERSION:
        type: string
        required: true
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

name: release
jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
      - name: "Check out repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.GIT_REF }}
          submodules: true

      - name: Compute common env vars
        id: vars
        run: |
          echo "VERSION=$(make get-version VERSION=${{ inputs.VERSION }})" >> $GITHUB_OUTPUT

      - name: "Get artifacts"
        uses: actions/download-artifact@v4
        with:
          path: ~/artifacts

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Upload docker images
        shell: bash
        run: |
          export VERSION=${{ steps.vars.outputs.VERSION }}
          export CONTAINER_NAME=nhost/cli

          docker load < ~/artifacts/cli-docker-image-$VERSION-linux-amd64/result
          docker tag cli:$VERSION $CONTAINER_NAME:$VERSION-amd64
          docker push $CONTAINER_NAME:$VERSION-amd64

          docker load < ~/artifacts/cli-docker-image-$VERSION-linux-arm64/result
          docker tag cli:$VERSION $CONTAINER_NAME:$VERSION-arm64
          docker push $CONTAINER_NAME:$VERSION-arm64

          docker manifest create \
              $CONTAINER_NAME:$VERSION \
              --amend $CONTAINER_NAME:$VERSION-amd64 \
              --amend $CONTAINER_NAME:$VERSION-arm64
          docker manifest push $CONTAINER_NAME:$VERSION

      - name: Upload assets
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export VERSION=${{ steps.vars.outputs.VERSION }}

          mkdir upload

          tar cvzf upload/cli-$VERSION-darwin-amd64.tar.gz ~/artifacts/cli-$VERSION-darwin-amd64/nhost-cli
          tar cvzf upload/cli-$VERSION-darwin-arm64.tar.gz ~/artifacts/cli-$VERSION-darwin-arm64/nhost-cli
          tar cvzf upload/cli-$VERSION-linux-amd64.tar.gz ~/artifacts/cli-$VERSION-linux-amd64/nhost-cli
          tar cvzf upload/cli-$VERSION-linux-arm64.tar.gz ~/artifacts/cli-$VERSION-linux-arm64/nhost-cli

          find upload/ -type f -exec sha256sum {} + > checksums.txt

          cat upload/checksums.txt

          gh release upload \
            --clobber "${{ github.ref_name }}" \
            ./upload/* checksums.txt

  update-releases-file:
    name: Update Releases File
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v3.5.0
        with:
          ref: gh-pages
      - name: Generate releases.json
        shell: bash
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          gh api repos/nhost/cli/releases > releases.json
      - name: Check if there are changes
        id: changes
        shell: bash
        run: |
          if [[ -z "$(git status --porcelain . )" ]]; then
           echo "::set-output name=changed::0"
          else
           echo "::set-output name=changed::1"
          fi
      - name: Committing releases.json
        shell: bash
        if: steps.changes.outputs.changed == 1
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "" --allow-empty-message
      - name: Push changes
        uses: ad-m/github-push-action@master
        if: steps.changes.outputs.changed == 1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          force: true
