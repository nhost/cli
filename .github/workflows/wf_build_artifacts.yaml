---
on:
  workflow_call:
    inputs:
      NAME:
        type: string
        required: true
      GIT_REF:
        type: string
        required: false
      VERSION:
        type: string
        required: true
    secrets:
      GIT_TOKEN:
        required: true

jobs:
  artifacts:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: ${{ fromJSON(inputs.ARCHS) }}
      fail-fast: true

    steps:
    - name: "Check out repository"
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ inputs.GIT_REF }}
        token: ${{ secrets.GIT_TOKEN }}
        submodules: true

    - uses: nixbuild/nix-quick-install-action@v22
      with:
        nix_version: 2.14.1
        nix_conf: |
          experimental-features = nix-command flakes
          sandbox = false
          substituters = https://cache.nixos.org/?priority=40 s3://nhost-nix-cache?region=eu-central-1&priority=50
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
          builders-use-substitutes = true

    - name: Cache nix store
      uses: actions/cache@v3
      with:
        path: /nix
        key: nix-${{ inputs.NAME }}-${{ matrix.platform }}-${{ hashFiles('flake.nix', 'flake.lock', '**.nix') }}
        restore-keys: nix-${{ inputs.NAME }}-${{ runner.OS }}-main

    - uses: docker/setup-qemu-action@v2
      if: ${{ ( matrix.platform == 'aarch64' ) }}

    - name: Compute common env vars
      id: vars
      run: |
        echo "VERSION=$(make get-version VER=${{ inputs.VERSION }})" >> $GITHUB_OUTPUT

    - name: place let's encrypt cert
      run: |
        cat <<EOF > ssl/.ssl/fullchain.pem
        ${{ secrets.CERT_FULL_CHAIN }}
        EOF
        cat <<EOF > ssl/.ssl/privkey.pem
        ${{ secrets.CERT_PRIV_KEY }}
        EOF
      shell: bash

    - name: "Build artifact"
      run: |
        make build ARCH=${{ matrix.platform }}
        zip -r result.zip result

    - name: "Push artifact to artifact repository"
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.NAME }}-artifact-${{ matrix.platform }}-${{ steps.vars.outputs.VERSION }}
        path: ${{ inputs.PROJECT }}/result.zip
        retention-days: 7
