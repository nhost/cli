# Code generated by github.com/nhost/be/tools/cuegraph, DO NOT EDIT.

scalar ConfigInt8

input ConfigInt8ComparisonExp {
    _eq: ConfigInt8
    _neq: ConfigInt8
    _in: [ConfigInt8!]
    _nin: [ConfigInt8!]
}

scalar ConfigInt16

input ConfigInt16ComparisonExp {
    _eq: ConfigInt16
    _neq: ConfigInt16
    _in: [ConfigInt16!]
    _nin: [ConfigInt16!]
}

scalar ConfigInt32

input ConfigInt32ComparisonExp {
    _eq: ConfigInt32
    _neq: ConfigInt32
    _in: [ConfigInt32!]
    _nin: [ConfigInt32!]
}

scalar ConfigInt64

input ConfigInt64ComparisonExp {
    _eq: ConfigInt64
    _neq: ConfigInt64
    _in: [ConfigInt64!]
    _nin: [ConfigInt64!]
}

scalar ConfigUint

input ConfigUintComparisonExp {
    _eq: ConfigUint
    _neq: ConfigUint
    _in: [ConfigUint!]
    _nin: [ConfigUint!]
}

scalar ConfigUint8

input ConfigUint8ComparisonExp {
    _eq: ConfigUint8
    _neq: ConfigUint8
    _in: [ConfigUint8!]
    _nin: [ConfigUint8!]
}

scalar ConfigUint16

input ConfigUint16ComparisonExp {
    _eq: ConfigUint16
    _neq: ConfigUint16
    _in: [ConfigUint16!]
    _nin: [ConfigUint16!]
}

scalar ConfigUint32

input ConfigUint32ComparisonExp {
    _eq: ConfigUint32
    _neq: ConfigUint32
    _in: [ConfigUint32!]
    _nin: [ConfigUint32!]
}

scalar ConfigUint64

input ConfigUint64ComparisonExp {
    _eq: ConfigUint64
    _neq: ConfigUint64
    _in: [ConfigUint64!]
    _nin: [ConfigUint64!]
}

input ConfigStringComparisonExp {
    _eq: String
    _neq: String
    _in: [String!]
    _nin: [String!]
}

input ConfigIntComparisonExp {
    _eq: Int
    _neq: Int
    _in: [Int!]
    _nin: [Int!]
}

input ConfigFloatComparisonExp {
    _eq: Float
    _neq: Float
    _in: [Float!]
    _nin: [Float!]
}

input ConfigBooleanComparisonExp {
    _eq: Boolean
    _neq: Boolean
    _in: [Boolean!]
    _nin: [Boolean!]
}

"""
Configuration for auth service
You can find more information about the configuration here:
https://github.com/nhost/hasura-auth/blob/main/docs/environment-variables.md
"""
type ConfigAuth {
    """
    Version of auth, you can see available versions in the URL below:
    https://hub.docker.com/r/nhost/hasura-auth/tags
    
    Releases:
    
    https://github.com/nhost/hasura-auth/releases
    """
    version: String
    """
    Resources for the service
    """
    resources: ConfigResources
    """

    """
    redirections: ConfigAuthRedirections
    """

    """
    signUp: ConfigAuthSignUp
    """

    """
    user: ConfigAuthUser
    """

    """
    session: ConfigAuthSession
    """

    """
    method: ConfigAuthMethod
    """

    """
    totp: ConfigAuthTotp
}

input ConfigAuthUpdateInput {
    version: String
    resources: ConfigResourcesUpdateInput
    redirections: ConfigAuthRedirectionsUpdateInput
    signUp: ConfigAuthSignUpUpdateInput
    user: ConfigAuthUserUpdateInput
    session: ConfigAuthSessionUpdateInput
    method: ConfigAuthMethodUpdateInput
    totp: ConfigAuthTotpUpdateInput
}

input ConfigAuthInsertInput {
    version: String
    resources: ConfigResourcesInsertInput
    redirections: ConfigAuthRedirectionsInsertInput
    signUp: ConfigAuthSignUpInsertInput
    user: ConfigAuthUserInsertInput
    session: ConfigAuthSessionInsertInput
    method: ConfigAuthMethodInsertInput
    totp: ConfigAuthTotpInsertInput
}

input ConfigAuthComparisonExp {
    _and: [ConfigAuthComparisonExp!]
    _not: ConfigAuthComparisonExp
    _or: [ConfigAuthComparisonExp!]
    version: ConfigStringComparisonExp
    resources: ConfigResourcesComparisonExp
    redirections: ConfigAuthRedirectionsComparisonExp
    signUp: ConfigAuthSignUpComparisonExp
    user: ConfigAuthUserComparisonExp
    session: ConfigAuthSessionComparisonExp
    method: ConfigAuthMethodComparisonExp
    totp: ConfigAuthTotpComparisonExp
}

"""

"""
type ConfigAuthMethod {
    """

    """
    anonymous: ConfigAuthMethodAnonymous
    """

    """
    emailPasswordless: ConfigAuthMethodEmailPasswordless
    """

    """
    emailPassword: ConfigAuthMethodEmailPassword
    """

    """
    smsPasswordless: ConfigAuthMethodSmsPasswordless
    """

    """
    oauth: ConfigAuthMethodOauth
    """

    """
    webauthn: ConfigAuthMethodWebauthn
}

input ConfigAuthMethodUpdateInput {
    anonymous: ConfigAuthMethodAnonymousUpdateInput
    emailPasswordless: ConfigAuthMethodEmailPasswordlessUpdateInput
    emailPassword: ConfigAuthMethodEmailPasswordUpdateInput
    smsPasswordless: ConfigAuthMethodSmsPasswordlessUpdateInput
    oauth: ConfigAuthMethodOauthUpdateInput
    webauthn: ConfigAuthMethodWebauthnUpdateInput
}

input ConfigAuthMethodInsertInput {
    anonymous: ConfigAuthMethodAnonymousInsertInput
    emailPasswordless: ConfigAuthMethodEmailPasswordlessInsertInput
    emailPassword: ConfigAuthMethodEmailPasswordInsertInput
    smsPasswordless: ConfigAuthMethodSmsPasswordlessInsertInput
    oauth: ConfigAuthMethodOauthInsertInput
    webauthn: ConfigAuthMethodWebauthnInsertInput
}

input ConfigAuthMethodComparisonExp {
    _and: [ConfigAuthMethodComparisonExp!]
    _not: ConfigAuthMethodComparisonExp
    _or: [ConfigAuthMethodComparisonExp!]
    anonymous: ConfigAuthMethodAnonymousComparisonExp
    emailPasswordless: ConfigAuthMethodEmailPasswordlessComparisonExp
    emailPassword: ConfigAuthMethodEmailPasswordComparisonExp
    smsPasswordless: ConfigAuthMethodSmsPasswordlessComparisonExp
    oauth: ConfigAuthMethodOauthComparisonExp
    webauthn: ConfigAuthMethodWebauthnComparisonExp
}

"""

"""
type ConfigAuthMethodAnonymous {
    """

    """
    enabled: Boolean
}

input ConfigAuthMethodAnonymousUpdateInput {
    enabled: Boolean
}

input ConfigAuthMethodAnonymousInsertInput {
    enabled: Boolean
}

input ConfigAuthMethodAnonymousComparisonExp {
    _and: [ConfigAuthMethodAnonymousComparisonExp!]
    _not: ConfigAuthMethodAnonymousComparisonExp
    _or: [ConfigAuthMethodAnonymousComparisonExp!]
    enabled: ConfigBooleanComparisonExp
}

"""

"""
type ConfigAuthMethodEmailPassword {
    """
    Disabling email+password sign in is not implmented yet
    enabled: bool | *true
    """
    hibpEnabled: Boolean
    """

    """
    emailVerificationRequired: Boolean
    """

    """
    passwordMinLength: ConfigUint8
}

input ConfigAuthMethodEmailPasswordUpdateInput {
    hibpEnabled: Boolean
    emailVerificationRequired: Boolean
    passwordMinLength: ConfigUint8
}

input ConfigAuthMethodEmailPasswordInsertInput {
    hibpEnabled: Boolean
    emailVerificationRequired: Boolean
    passwordMinLength: ConfigUint8
}

input ConfigAuthMethodEmailPasswordComparisonExp {
    _and: [ConfigAuthMethodEmailPasswordComparisonExp!]
    _not: ConfigAuthMethodEmailPasswordComparisonExp
    _or: [ConfigAuthMethodEmailPasswordComparisonExp!]
    hibpEnabled: ConfigBooleanComparisonExp
    emailVerificationRequired: ConfigBooleanComparisonExp
    passwordMinLength: ConfigUint8ComparisonExp
}

"""

"""
type ConfigAuthMethodEmailPasswordless {
    """

    """
    enabled: Boolean
}

input ConfigAuthMethodEmailPasswordlessUpdateInput {
    enabled: Boolean
}

input ConfigAuthMethodEmailPasswordlessInsertInput {
    enabled: Boolean
}

input ConfigAuthMethodEmailPasswordlessComparisonExp {
    _and: [ConfigAuthMethodEmailPasswordlessComparisonExp!]
    _not: ConfigAuthMethodEmailPasswordlessComparisonExp
    _or: [ConfigAuthMethodEmailPasswordlessComparisonExp!]
    enabled: ConfigBooleanComparisonExp
}

"""

"""
type ConfigAuthMethodOauth {
    """

    """
    apple: ConfigAuthMethodOauthApple
    """

    """
    azuread: ConfigAuthMethodOauthAzuread
    """

    """
    bitbucket: ConfigStandardOauthProvider
    """

    """
    discord: ConfigStandardOauthProviderWithScope
    """

    """
    facebook: ConfigStandardOauthProviderWithScope
    """

    """
    github: ConfigStandardOauthProviderWithScope
    """

    """
    gitlab: ConfigStandardOauthProviderWithScope
    """

    """
    google: ConfigStandardOauthProviderWithScope
    """

    """
    linkedin: ConfigStandardOauthProviderWithScope
    """

    """
    spotify: ConfigStandardOauthProviderWithScope
    """

    """
    strava: ConfigStandardOauthProviderWithScope
    """

    """
    twitch: ConfigStandardOauthProviderWithScope
    """

    """
    twitter: ConfigAuthMethodOauthTwitter
    """

    """
    windowslive: ConfigStandardOauthProviderWithScope
    """

    """
    workos: ConfigAuthMethodOauthWorkos
}

input ConfigAuthMethodOauthUpdateInput {
    apple: ConfigAuthMethodOauthAppleUpdateInput
    azuread: ConfigAuthMethodOauthAzureadUpdateInput
    bitbucket: ConfigStandardOauthProviderUpdateInput
    discord: ConfigStandardOauthProviderWithScopeUpdateInput
    facebook: ConfigStandardOauthProviderWithScopeUpdateInput
    github: ConfigStandardOauthProviderWithScopeUpdateInput
    gitlab: ConfigStandardOauthProviderWithScopeUpdateInput
    google: ConfigStandardOauthProviderWithScopeUpdateInput
    linkedin: ConfigStandardOauthProviderWithScopeUpdateInput
    spotify: ConfigStandardOauthProviderWithScopeUpdateInput
    strava: ConfigStandardOauthProviderWithScopeUpdateInput
    twitch: ConfigStandardOauthProviderWithScopeUpdateInput
    twitter: ConfigAuthMethodOauthTwitterUpdateInput
    windowslive: ConfigStandardOauthProviderWithScopeUpdateInput
    workos: ConfigAuthMethodOauthWorkosUpdateInput
}

input ConfigAuthMethodOauthInsertInput {
    apple: ConfigAuthMethodOauthAppleInsertInput
    azuread: ConfigAuthMethodOauthAzureadInsertInput
    bitbucket: ConfigStandardOauthProviderInsertInput
    discord: ConfigStandardOauthProviderWithScopeInsertInput
    facebook: ConfigStandardOauthProviderWithScopeInsertInput
    github: ConfigStandardOauthProviderWithScopeInsertInput
    gitlab: ConfigStandardOauthProviderWithScopeInsertInput
    google: ConfigStandardOauthProviderWithScopeInsertInput
    linkedin: ConfigStandardOauthProviderWithScopeInsertInput
    spotify: ConfigStandardOauthProviderWithScopeInsertInput
    strava: ConfigStandardOauthProviderWithScopeInsertInput
    twitch: ConfigStandardOauthProviderWithScopeInsertInput
    twitter: ConfigAuthMethodOauthTwitterInsertInput
    windowslive: ConfigStandardOauthProviderWithScopeInsertInput
    workos: ConfigAuthMethodOauthWorkosInsertInput
}

input ConfigAuthMethodOauthComparisonExp {
    _and: [ConfigAuthMethodOauthComparisonExp!]
    _not: ConfigAuthMethodOauthComparisonExp
    _or: [ConfigAuthMethodOauthComparisonExp!]
    apple: ConfigAuthMethodOauthAppleComparisonExp
    azuread: ConfigAuthMethodOauthAzureadComparisonExp
    bitbucket: ConfigStandardOauthProviderComparisonExp
    discord: ConfigStandardOauthProviderWithScopeComparisonExp
    facebook: ConfigStandardOauthProviderWithScopeComparisonExp
    github: ConfigStandardOauthProviderWithScopeComparisonExp
    gitlab: ConfigStandardOauthProviderWithScopeComparisonExp
    google: ConfigStandardOauthProviderWithScopeComparisonExp
    linkedin: ConfigStandardOauthProviderWithScopeComparisonExp
    spotify: ConfigStandardOauthProviderWithScopeComparisonExp
    strava: ConfigStandardOauthProviderWithScopeComparisonExp
    twitch: ConfigStandardOauthProviderWithScopeComparisonExp
    twitter: ConfigAuthMethodOauthTwitterComparisonExp
    windowslive: ConfigStandardOauthProviderWithScopeComparisonExp
    workos: ConfigAuthMethodOauthWorkosComparisonExp
}

"""

"""
type ConfigAuthMethodOauthApple {
    """

    """
    enabled: Boolean
    """

    """
    clientId: String
    """

    """
    keyId: String
    """

    """
    teamId: String
    """

    """
    scope: [String!]
    """

    """
    privateKey: String
}

input ConfigAuthMethodOauthAppleUpdateInput {
    enabled: Boolean
    clientId: String
    keyId: String
    teamId: String
        scope: [String!]
    privateKey: String
}

input ConfigAuthMethodOauthAppleInsertInput {
    enabled: Boolean
    clientId: String
    keyId: String
    teamId: String
        scope: [String!]
    privateKey: String
}

input ConfigAuthMethodOauthAppleComparisonExp {
    _and: [ConfigAuthMethodOauthAppleComparisonExp!]
    _not: ConfigAuthMethodOauthAppleComparisonExp
    _or: [ConfigAuthMethodOauthAppleComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    clientId: ConfigStringComparisonExp
    keyId: ConfigStringComparisonExp
    teamId: ConfigStringComparisonExp
    scope: ConfigStringComparisonExp
    privateKey: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthMethodOauthAzuread {
    """

    """
    tenant: String
    """

    """
    enabled: Boolean
    """

    """
    clientId: String
    """

    """
    clientSecret: String
}

input ConfigAuthMethodOauthAzureadUpdateInput {
    tenant: String
    enabled: Boolean
    clientId: String
    clientSecret: String
}

input ConfigAuthMethodOauthAzureadInsertInput {
    tenant: String
    enabled: Boolean
    clientId: String
    clientSecret: String
}

input ConfigAuthMethodOauthAzureadComparisonExp {
    _and: [ConfigAuthMethodOauthAzureadComparisonExp!]
    _not: ConfigAuthMethodOauthAzureadComparisonExp
    _or: [ConfigAuthMethodOauthAzureadComparisonExp!]
    tenant: ConfigStringComparisonExp
    enabled: ConfigBooleanComparisonExp
    clientId: ConfigStringComparisonExp
    clientSecret: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthMethodOauthTwitter {
    """

    """
    enabled: Boolean
    """

    """
    consumerKey: String
    """

    """
    consumerSecret: String
}

input ConfigAuthMethodOauthTwitterUpdateInput {
    enabled: Boolean
    consumerKey: String
    consumerSecret: String
}

input ConfigAuthMethodOauthTwitterInsertInput {
    enabled: Boolean
    consumerKey: String
    consumerSecret: String
}

input ConfigAuthMethodOauthTwitterComparisonExp {
    _and: [ConfigAuthMethodOauthTwitterComparisonExp!]
    _not: ConfigAuthMethodOauthTwitterComparisonExp
    _or: [ConfigAuthMethodOauthTwitterComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    consumerKey: ConfigStringComparisonExp
    consumerSecret: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthMethodOauthWorkos {
    """

    """
    connection: String
    """

    """
    enabled: Boolean
    """

    """
    clientId: String
    """

    """
    organization: String
    """

    """
    clientSecret: String
}

input ConfigAuthMethodOauthWorkosUpdateInput {
    connection: String
    enabled: Boolean
    clientId: String
    organization: String
    clientSecret: String
}

input ConfigAuthMethodOauthWorkosInsertInput {
    connection: String
    enabled: Boolean
    clientId: String
    organization: String
    clientSecret: String
}

input ConfigAuthMethodOauthWorkosComparisonExp {
    _and: [ConfigAuthMethodOauthWorkosComparisonExp!]
    _not: ConfigAuthMethodOauthWorkosComparisonExp
    _or: [ConfigAuthMethodOauthWorkosComparisonExp!]
    connection: ConfigStringComparisonExp
    enabled: ConfigBooleanComparisonExp
    clientId: ConfigStringComparisonExp
    organization: ConfigStringComparisonExp
    clientSecret: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthMethodSmsPasswordless {
    """

    """
    enabled: Boolean
}

input ConfigAuthMethodSmsPasswordlessUpdateInput {
    enabled: Boolean
}

input ConfigAuthMethodSmsPasswordlessInsertInput {
    enabled: Boolean
}

input ConfigAuthMethodSmsPasswordlessComparisonExp {
    _and: [ConfigAuthMethodSmsPasswordlessComparisonExp!]
    _not: ConfigAuthMethodSmsPasswordlessComparisonExp
    _or: [ConfigAuthMethodSmsPasswordlessComparisonExp!]
    enabled: ConfigBooleanComparisonExp
}

"""

"""
type ConfigAuthMethodWebauthn {
    """

    """
    enabled: Boolean
    """

    """
    relyingParty: ConfigAuthMethodWebauthnRelyingParty
    """

    """
    attestation: ConfigAuthMethodWebauthnAttestation
}

input ConfigAuthMethodWebauthnUpdateInput {
    enabled: Boolean
    relyingParty: ConfigAuthMethodWebauthnRelyingPartyUpdateInput
    attestation: ConfigAuthMethodWebauthnAttestationUpdateInput
}

input ConfigAuthMethodWebauthnInsertInput {
    enabled: Boolean
    relyingParty: ConfigAuthMethodWebauthnRelyingPartyInsertInput
    attestation: ConfigAuthMethodWebauthnAttestationInsertInput
}

input ConfigAuthMethodWebauthnComparisonExp {
    _and: [ConfigAuthMethodWebauthnComparisonExp!]
    _not: ConfigAuthMethodWebauthnComparisonExp
    _or: [ConfigAuthMethodWebauthnComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    relyingParty: ConfigAuthMethodWebauthnRelyingPartyComparisonExp
    attestation: ConfigAuthMethodWebauthnAttestationComparisonExp
}

"""

"""
type ConfigAuthMethodWebauthnAttestation {
    """

    """
    timeout: ConfigUint32
}

input ConfigAuthMethodWebauthnAttestationUpdateInput {
    timeout: ConfigUint32
}

input ConfigAuthMethodWebauthnAttestationInsertInput {
    timeout: ConfigUint32
}

input ConfigAuthMethodWebauthnAttestationComparisonExp {
    _and: [ConfigAuthMethodWebauthnAttestationComparisonExp!]
    _not: ConfigAuthMethodWebauthnAttestationComparisonExp
    _or: [ConfigAuthMethodWebauthnAttestationComparisonExp!]
    timeout: ConfigUint32ComparisonExp
}

"""

"""
type ConfigAuthMethodWebauthnRelyingParty {
    """

    """
    name: String
    """

    """
    origins: [ConfigUrl!]
}

input ConfigAuthMethodWebauthnRelyingPartyUpdateInput {
    name: String
        origins: [ConfigUrl!]
}

input ConfigAuthMethodWebauthnRelyingPartyInsertInput {
    name: String
        origins: [ConfigUrl!]
}

input ConfigAuthMethodWebauthnRelyingPartyComparisonExp {
    _and: [ConfigAuthMethodWebauthnRelyingPartyComparisonExp!]
    _not: ConfigAuthMethodWebauthnRelyingPartyComparisonExp
    _or: [ConfigAuthMethodWebauthnRelyingPartyComparisonExp!]
    name: ConfigStringComparisonExp
    origins: ConfigUrlComparisonExp
}

"""

"""
type ConfigAuthRedirections {
    """
    AUTH_CLIENT_URL
    """
    clientUrl: ConfigUrl
    """
    AUTH_ACCESS_CONTROL_ALLOWED_REDIRECT_URLS
    """
    allowedUrls: [String!]
}

input ConfigAuthRedirectionsUpdateInput {
    clientUrl: ConfigUrl
        allowedUrls: [String!]
}

input ConfigAuthRedirectionsInsertInput {
    clientUrl: ConfigUrl
        allowedUrls: [String!]
}

input ConfigAuthRedirectionsComparisonExp {
    _and: [ConfigAuthRedirectionsComparisonExp!]
    _not: ConfigAuthRedirectionsComparisonExp
    _or: [ConfigAuthRedirectionsComparisonExp!]
    clientUrl: ConfigUrlComparisonExp
    allowedUrls: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthSession {
    """

    """
    accessToken: ConfigAuthSessionAccessToken
    """

    """
    refreshToken: ConfigAuthSessionRefreshToken
}

input ConfigAuthSessionUpdateInput {
    accessToken: ConfigAuthSessionAccessTokenUpdateInput
    refreshToken: ConfigAuthSessionRefreshTokenUpdateInput
}

input ConfigAuthSessionInsertInput {
    accessToken: ConfigAuthSessionAccessTokenInsertInput
    refreshToken: ConfigAuthSessionRefreshTokenInsertInput
}

input ConfigAuthSessionComparisonExp {
    _and: [ConfigAuthSessionComparisonExp!]
    _not: ConfigAuthSessionComparisonExp
    _or: [ConfigAuthSessionComparisonExp!]
    accessToken: ConfigAuthSessionAccessTokenComparisonExp
    refreshToken: ConfigAuthSessionRefreshTokenComparisonExp
}

"""

"""
type ConfigAuthSessionAccessToken {
    """
    AUTH_ACCESS_TOKEN_EXPIRES_IN
    """
    expiresIn: ConfigUint32
    """
    AUTH_JWT_CUSTOM_CLAIMS
    """
    customClaims: [ConfigAuthsessionaccessTokenCustomClaims!]
}

input ConfigAuthSessionAccessTokenUpdateInput {
    expiresIn: ConfigUint32
        customClaims: [ConfigAuthsessionaccessTokenCustomClaimsUpdateInput!]
}

input ConfigAuthSessionAccessTokenInsertInput {
    expiresIn: ConfigUint32
        customClaims: [ConfigAuthsessionaccessTokenCustomClaimsInsertInput!]
}

input ConfigAuthSessionAccessTokenComparisonExp {
    _and: [ConfigAuthSessionAccessTokenComparisonExp!]
    _not: ConfigAuthSessionAccessTokenComparisonExp
    _or: [ConfigAuthSessionAccessTokenComparisonExp!]
    expiresIn: ConfigUint32ComparisonExp
    customClaims: ConfigAuthsessionaccessTokenCustomClaimsComparisonExp
}

"""

"""
type ConfigAuthSessionRefreshToken {
    """
    AUTH_REFRESH_TOKEN_EXPIRES_IN
    """
    expiresIn: ConfigUint32
}

input ConfigAuthSessionRefreshTokenUpdateInput {
    expiresIn: ConfigUint32
}

input ConfigAuthSessionRefreshTokenInsertInput {
    expiresIn: ConfigUint32
}

input ConfigAuthSessionRefreshTokenComparisonExp {
    _and: [ConfigAuthSessionRefreshTokenComparisonExp!]
    _not: ConfigAuthSessionRefreshTokenComparisonExp
    _or: [ConfigAuthSessionRefreshTokenComparisonExp!]
    expiresIn: ConfigUint32ComparisonExp
}

"""

"""
type ConfigAuthSignUp {
    """
    Inverse of AUTH_DISABLE_NEW_USERS
    """
    enabled: Boolean
}

input ConfigAuthSignUpUpdateInput {
    enabled: Boolean
}

input ConfigAuthSignUpInsertInput {
    enabled: Boolean
}

input ConfigAuthSignUpComparisonExp {
    _and: [ConfigAuthSignUpComparisonExp!]
    _not: ConfigAuthSignUpComparisonExp
    _or: [ConfigAuthSignUpComparisonExp!]
    enabled: ConfigBooleanComparisonExp
}

"""

"""
type ConfigAuthTotp {
    """

    """
    enabled: Boolean
    """

    """
    issuer: String
}

input ConfigAuthTotpUpdateInput {
    enabled: Boolean
    issuer: String
}

input ConfigAuthTotpInsertInput {
    enabled: Boolean
    issuer: String
}

input ConfigAuthTotpComparisonExp {
    _and: [ConfigAuthTotpComparisonExp!]
    _not: ConfigAuthTotpComparisonExp
    _or: [ConfigAuthTotpComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    issuer: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthUser {
    """

    """
    roles: ConfigAuthUserRoles
    """

    """
    locale: ConfigAuthUserLocale
    """

    """
    gravatar: ConfigAuthUserGravatar
    """

    """
    email: ConfigAuthUserEmail
    """

    """
    emailDomains: ConfigAuthUserEmailDomains
}

input ConfigAuthUserUpdateInput {
    roles: ConfigAuthUserRolesUpdateInput
    locale: ConfigAuthUserLocaleUpdateInput
    gravatar: ConfigAuthUserGravatarUpdateInput
    email: ConfigAuthUserEmailUpdateInput
    emailDomains: ConfigAuthUserEmailDomainsUpdateInput
}

input ConfigAuthUserInsertInput {
    roles: ConfigAuthUserRolesInsertInput
    locale: ConfigAuthUserLocaleInsertInput
    gravatar: ConfigAuthUserGravatarInsertInput
    email: ConfigAuthUserEmailInsertInput
    emailDomains: ConfigAuthUserEmailDomainsInsertInput
}

input ConfigAuthUserComparisonExp {
    _and: [ConfigAuthUserComparisonExp!]
    _not: ConfigAuthUserComparisonExp
    _or: [ConfigAuthUserComparisonExp!]
    roles: ConfigAuthUserRolesComparisonExp
    locale: ConfigAuthUserLocaleComparisonExp
    gravatar: ConfigAuthUserGravatarComparisonExp
    email: ConfigAuthUserEmailComparisonExp
    emailDomains: ConfigAuthUserEmailDomainsComparisonExp
}

"""

"""
type ConfigAuthUserEmail {
    """
    AUTH_ACCESS_CONTROL_ALLOWED_EMAILS
    """
    allowed: [ConfigEmail!]
    """
    AUTH_ACCESS_CONTROL_BLOCKED_EMAILS
    """
    blocked: [ConfigEmail!]
}

input ConfigAuthUserEmailUpdateInput {
        allowed: [ConfigEmail!]
        blocked: [ConfigEmail!]
}

input ConfigAuthUserEmailInsertInput {
        allowed: [ConfigEmail!]
        blocked: [ConfigEmail!]
}

input ConfigAuthUserEmailComparisonExp {
    _and: [ConfigAuthUserEmailComparisonExp!]
    _not: ConfigAuthUserEmailComparisonExp
    _or: [ConfigAuthUserEmailComparisonExp!]
    allowed: ConfigEmailComparisonExp
    blocked: ConfigEmailComparisonExp
}

"""

"""
type ConfigAuthUserEmailDomains {
    """
    AUTH_ACCESS_CONTROL_ALLOWED_EMAIL_DOMAINS
    """
    allowed: [String!]
    """
    AUTH_ACCESS_CONTROL_BLOCKED_EMAIL_DOMAINS
    """
    blocked: [String!]
}

input ConfigAuthUserEmailDomainsUpdateInput {
        allowed: [String!]
        blocked: [String!]
}

input ConfigAuthUserEmailDomainsInsertInput {
        allowed: [String!]
        blocked: [String!]
}

input ConfigAuthUserEmailDomainsComparisonExp {
    _and: [ConfigAuthUserEmailDomainsComparisonExp!]
    _not: ConfigAuthUserEmailDomainsComparisonExp
    _or: [ConfigAuthUserEmailDomainsComparisonExp!]
    allowed: ConfigStringComparisonExp
    blocked: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthUserGravatar {
    """
    AUTH_GRAVATAR_ENABLED
    """
    enabled: Boolean
    """

    """
    default: String
    """

    """
    rating: String
}

input ConfigAuthUserGravatarUpdateInput {
    enabled: Boolean
    default: String
    rating: String
}

input ConfigAuthUserGravatarInsertInput {
    enabled: Boolean
    default: String
    rating: String
}

input ConfigAuthUserGravatarComparisonExp {
    _and: [ConfigAuthUserGravatarComparisonExp!]
    _not: ConfigAuthUserGravatarComparisonExp
    _or: [ConfigAuthUserGravatarComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    default: ConfigStringComparisonExp
    rating: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthUserLocale {
    """
    AUTH_LOCALE_DEFAULT
    """
    default: ConfigLocale
    """
    AUTH_LOCALE_ALLOWED_LOCALES
    """
    allowed: [ConfigLocale!]
}

input ConfigAuthUserLocaleUpdateInput {
    default: ConfigLocale
        allowed: [ConfigLocale!]
}

input ConfigAuthUserLocaleInsertInput {
    default: ConfigLocale
        allowed: [ConfigLocale!]
}

input ConfigAuthUserLocaleComparisonExp {
    _and: [ConfigAuthUserLocaleComparisonExp!]
    _not: ConfigAuthUserLocaleComparisonExp
    _or: [ConfigAuthUserLocaleComparisonExp!]
    default: ConfigLocaleComparisonExp
    allowed: ConfigLocaleComparisonExp
}

"""

"""
type ConfigAuthUserRoles {
    """
    AUTH_USER_DEFAULT_ROLE
    """
    default: ConfigUserRole
    """
    AUTH_USER_DEFAULT_ALLOWED_ROLES
    """
    allowed: [ConfigUserRole!]
}

input ConfigAuthUserRolesUpdateInput {
    default: ConfigUserRole
        allowed: [ConfigUserRole!]
}

input ConfigAuthUserRolesInsertInput {
    default: ConfigUserRole
        allowed: [ConfigUserRole!]
}

input ConfigAuthUserRolesComparisonExp {
    _and: [ConfigAuthUserRolesComparisonExp!]
    _not: ConfigAuthUserRolesComparisonExp
    _or: [ConfigAuthUserRolesComparisonExp!]
    default: ConfigUserRoleComparisonExp
    allowed: ConfigUserRoleComparisonExp
}

"""
AUTH_JWT_CUSTOM_CLAIMS
"""
type ConfigAuthsessionaccessTokenCustomClaims {
    """

    """
    key: String!
    """

    """
    value: String!
}

input ConfigAuthsessionaccessTokenCustomClaimsUpdateInput {
    key: String
    value: String
}

input ConfigAuthsessionaccessTokenCustomClaimsInsertInput {
    key: String!
    value: String!
}

input ConfigAuthsessionaccessTokenCustomClaimsComparisonExp {
    _and: [ConfigAuthsessionaccessTokenCustomClaimsComparisonExp!]
    _not: ConfigAuthsessionaccessTokenCustomClaimsComparisonExp
    _or: [ConfigAuthsessionaccessTokenCustomClaimsComparisonExp!]
    key: ConfigStringComparisonExp
    value: ConfigStringComparisonExp
}

"""

"""
type ConfigClaimMap {
    """

    """
    claim: String!
    """

    """
    value: String
    """

    """
    path: String
    """

    """
    default: String
}

input ConfigClaimMapUpdateInput {
    claim: String
    value: String
    path: String
    default: String
}

input ConfigClaimMapInsertInput {
    claim: String!
    value: String
    path: String
    default: String
}

input ConfigClaimMapComparisonExp {
    _and: [ConfigClaimMapComparisonExp!]
    _not: ConfigClaimMapComparisonExp
    _or: [ConfigClaimMapComparisonExp!]
    claim: ConfigStringComparisonExp
    value: ConfigStringComparisonExp
    path: ConfigStringComparisonExp
    default: ConfigStringComparisonExp
}

"""
main entrypoint to the configuration
"""
type ConfigConfig {
    """
    Global configuration that applies to all services
    """
    global: ConfigGlobal
    """
    Configuration for hasura
    """
    hasura: ConfigHasura!
    """
    Configuration for functions service
    """
    functions: ConfigFunctions
    """
    Configuration for auth service
    """
    auth: ConfigAuth
    """
    Configuration for postgres service
    """
    postgres: ConfigPostgres
    """
    Configuration for third party providers like SMTP, SMS, etc.
    """
    provider: ConfigProvider
    """
    Configuration for storage service
    """
    storage: ConfigStorage
    """
    Configuration for observability service
    """
    observability: ConfigObservability!
}

input ConfigConfigUpdateInput {
    global: ConfigGlobalUpdateInput
    hasura: ConfigHasuraUpdateInput
    functions: ConfigFunctionsUpdateInput
    auth: ConfigAuthUpdateInput
    postgres: ConfigPostgresUpdateInput
    provider: ConfigProviderUpdateInput
    storage: ConfigStorageUpdateInput
    observability: ConfigObservabilityUpdateInput
}

input ConfigConfigInsertInput {
    global: ConfigGlobalInsertInput
    hasura: ConfigHasuraInsertInput!
    functions: ConfigFunctionsInsertInput
    auth: ConfigAuthInsertInput
    postgres: ConfigPostgresInsertInput
    provider: ConfigProviderInsertInput
    storage: ConfigStorageInsertInput
    observability: ConfigObservabilityInsertInput!
}

input ConfigConfigComparisonExp {
    _and: [ConfigConfigComparisonExp!]
    _not: ConfigConfigComparisonExp
    _or: [ConfigConfigComparisonExp!]
    global: ConfigGlobalComparisonExp
    hasura: ConfigHasuraComparisonExp
    functions: ConfigFunctionsComparisonExp
    auth: ConfigAuthComparisonExp
    postgres: ConfigPostgresComparisonExp
    provider: ConfigProviderComparisonExp
    storage: ConfigStorageComparisonExp
    observability: ConfigObservabilityComparisonExp
}

scalar ConfigEmail

input ConfigEmailComparisonExp {
    _eq: ConfigEmail
    _neq: ConfigEmail
    _in: [ConfigEmail!]
    _nin: [ConfigEmail!]
}

"""

"""
type ConfigEnvironmentVariable {
    """

    """
    name: String!
    """
    Value of the environment variable
    """
    value: String!
}

input ConfigEnvironmentVariableUpdateInput {
    name: String
    value: String
}

input ConfigEnvironmentVariableInsertInput {
    name: String!
    value: String!
}

input ConfigEnvironmentVariableComparisonExp {
    _and: [ConfigEnvironmentVariableComparisonExp!]
    _not: ConfigEnvironmentVariableComparisonExp
    _or: [ConfigEnvironmentVariableComparisonExp!]
    name: ConfigStringComparisonExp
    value: ConfigStringComparisonExp
}

"""
Configuration for functions service
"""
type ConfigFunctions {
    """

    """
    node: ConfigFunctionsNode
}

input ConfigFunctionsUpdateInput {
    node: ConfigFunctionsNodeUpdateInput
}

input ConfigFunctionsInsertInput {
    node: ConfigFunctionsNodeInsertInput
}

input ConfigFunctionsComparisonExp {
    _and: [ConfigFunctionsComparisonExp!]
    _not: ConfigFunctionsComparisonExp
    _or: [ConfigFunctionsComparisonExp!]
    node: ConfigFunctionsNodeComparisonExp
}

"""

"""
type ConfigFunctionsNode {
    """

    """
    version: Int
}

input ConfigFunctionsNodeUpdateInput {
    version: Int
}

input ConfigFunctionsNodeInsertInput {
    version: Int
}

input ConfigFunctionsNodeComparisonExp {
    _and: [ConfigFunctionsNodeComparisonExp!]
    _not: ConfigFunctionsNodeComparisonExp
    _or: [ConfigFunctionsNodeComparisonExp!]
    version: ConfigIntComparisonExp
}

"""
Global configuration that applies to all services
"""
type ConfigGlobal {
    """
    User-defined environment variables that are spread over all services
    """
    environment: [ConfigEnvironmentVariable!]
}

input ConfigGlobalUpdateInput {
        environment: [ConfigEnvironmentVariableUpdateInput!]
}

input ConfigGlobalInsertInput {
        environment: [ConfigEnvironmentVariableInsertInput!]
}

input ConfigGlobalComparisonExp {
    _and: [ConfigGlobalComparisonExp!]
    _not: ConfigGlobalComparisonExp
    _or: [ConfigGlobalComparisonExp!]
    environment: ConfigEnvironmentVariableComparisonExp
}

"""

"""
type ConfigGrafana {
    """

    """
    adminPassword: String!
}

input ConfigGrafanaUpdateInput {
    adminPassword: String
}

input ConfigGrafanaInsertInput {
    adminPassword: String!
}

input ConfigGrafanaComparisonExp {
    _and: [ConfigGrafanaComparisonExp!]
    _not: ConfigGrafanaComparisonExp
    _or: [ConfigGrafanaComparisonExp!]
    adminPassword: ConfigStringComparisonExp
}

"""
Configuration for hasura service
"""
type ConfigHasura {
    """
    Version of hasura, you can see available versions in the URL below:
    https://hub.docker.com/r/hasura/graphql-engine/tags
    """
    version: String
    """
    JWT Secrets configuration
    """
    jwtSecrets: [ConfigJWTSecret!]
    """
    Admin secret
    """
    adminSecret: String!
    """
    Webhook secret
    """
    webhookSecret: String!
    """
    Configuration for hasura services
    Reference: https://hasura.io/docs/latest/deployment/graphql-engine-flags/reference/
    """
    settings: ConfigHasuraSettings
    """

    """
    logs: ConfigHasuraLogs
    """

    """
    events: ConfigHasuraEvents
    """
    Resources for the service
    """
    resources: ConfigResources
}

input ConfigHasuraUpdateInput {
    version: String
        jwtSecrets: [ConfigJWTSecretUpdateInput!]
    adminSecret: String
    webhookSecret: String
    settings: ConfigHasuraSettingsUpdateInput
    logs: ConfigHasuraLogsUpdateInput
    events: ConfigHasuraEventsUpdateInput
    resources: ConfigResourcesUpdateInput
}

input ConfigHasuraInsertInput {
    version: String
        jwtSecrets: [ConfigJWTSecretInsertInput!]
    adminSecret: String!
    webhookSecret: String!
    settings: ConfigHasuraSettingsInsertInput
    logs: ConfigHasuraLogsInsertInput
    events: ConfigHasuraEventsInsertInput
    resources: ConfigResourcesInsertInput
}

input ConfigHasuraComparisonExp {
    _and: [ConfigHasuraComparisonExp!]
    _not: ConfigHasuraComparisonExp
    _or: [ConfigHasuraComparisonExp!]
    version: ConfigStringComparisonExp
    jwtSecrets: ConfigJWTSecretComparisonExp
    adminSecret: ConfigStringComparisonExp
    webhookSecret: ConfigStringComparisonExp
    settings: ConfigHasuraSettingsComparisonExp
    logs: ConfigHasuraLogsComparisonExp
    events: ConfigHasuraEventsComparisonExp
    resources: ConfigResourcesComparisonExp
}

scalar ConfigHasuraAPIs

input ConfigHasuraAPIsComparisonExp {
    _eq: ConfigHasuraAPIs
    _neq: ConfigHasuraAPIs
    _in: [ConfigHasuraAPIs!]
    _nin: [ConfigHasuraAPIs!]
}

"""

"""
type ConfigHasuraEvents {
    """
    HASURA_GRAPHQL_EVENTS_HTTP_POOL_SIZE
    """
    httpPoolSize: ConfigUint32
}

input ConfigHasuraEventsUpdateInput {
    httpPoolSize: ConfigUint32
}

input ConfigHasuraEventsInsertInput {
    httpPoolSize: ConfigUint32
}

input ConfigHasuraEventsComparisonExp {
    _and: [ConfigHasuraEventsComparisonExp!]
    _not: ConfigHasuraEventsComparisonExp
    _or: [ConfigHasuraEventsComparisonExp!]
    httpPoolSize: ConfigUint32ComparisonExp
}

"""

"""
type ConfigHasuraLogs {
    """

    """
    level: String
}

input ConfigHasuraLogsUpdateInput {
    level: String
}

input ConfigHasuraLogsInsertInput {
    level: String
}

input ConfigHasuraLogsComparisonExp {
    _and: [ConfigHasuraLogsComparisonExp!]
    _not: ConfigHasuraLogsComparisonExp
    _or: [ConfigHasuraLogsComparisonExp!]
    level: ConfigStringComparisonExp
}

"""
Configuration for hasura services
Reference: https://hasura.io/docs/latest/deployment/graphql-engine-flags/reference/
"""
type ConfigHasuraSettings {
    """
    HASURA_GRAPHQL_CORS_DOMAIN
    """
    corsDomain: [ConfigUrl!]
    """
    HASURA_GRAPHQL_DEV_MODE
    """
    devMode: Boolean
    """
    HASURA_GRAPHQL_ENABLE_ALLOWLIST
    """
    enableAllowList: Boolean
    """
    HASURA_GRAPHQL_ENABLE_CONSOLE
    """
    enableConsole: Boolean
    """
    HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS
    """
    enableRemoteSchemaPermissions: Boolean
    """
    HASURA_GRAPHQL_ENABLED_APIS
    """
    enabledAPIs: [ConfigHasuraAPIs!]
    """
    HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_REFETCH_INTERVAL
    """
    liveQueriesMultiplexedRefetchInterval: ConfigUint32
}

input ConfigHasuraSettingsUpdateInput {
        corsDomain: [ConfigUrl!]
    devMode: Boolean
    enableAllowList: Boolean
    enableConsole: Boolean
    enableRemoteSchemaPermissions: Boolean
        enabledAPIs: [ConfigHasuraAPIs!]
    liveQueriesMultiplexedRefetchInterval: ConfigUint32
}

input ConfigHasuraSettingsInsertInput {
        corsDomain: [ConfigUrl!]
    devMode: Boolean
    enableAllowList: Boolean
    enableConsole: Boolean
    enableRemoteSchemaPermissions: Boolean
        enabledAPIs: [ConfigHasuraAPIs!]
    liveQueriesMultiplexedRefetchInterval: ConfigUint32
}

input ConfigHasuraSettingsComparisonExp {
    _and: [ConfigHasuraSettingsComparisonExp!]
    _not: ConfigHasuraSettingsComparisonExp
    _or: [ConfigHasuraSettingsComparisonExp!]
    corsDomain: ConfigUrlComparisonExp
    devMode: ConfigBooleanComparisonExp
    enableAllowList: ConfigBooleanComparisonExp
    enableConsole: ConfigBooleanComparisonExp
    enableRemoteSchemaPermissions: ConfigBooleanComparisonExp
    enabledAPIs: ConfigHasuraAPIsComparisonExp
    liveQueriesMultiplexedRefetchInterval: ConfigUint32ComparisonExp
}

"""
See https://hasura.io/docs/latest/auth/authentication/jwt/
"""
type ConfigJWTSecret {
    """

    """
    type: String
    """

    """
    key: String
    """

    """
    jwk_url: ConfigUrl
    """

    """
    claims_format: String
    """

    """
    audience: String
    """

    """
    issuer: String
    """

    """
    allowed_skew: ConfigUint32
    """

    """
    header: String
    """

    """
    claims_map: [ConfigClaimMap!]
    """

    """
    claims_namespace: String
    """

    """
    claims_namespace_path: String
}

input ConfigJWTSecretUpdateInput {
    type: String
    key: String
    jwk_url: ConfigUrl
    claims_format: String
    audience: String
    issuer: String
    allowed_skew: ConfigUint32
    header: String
        claims_map: [ConfigClaimMapUpdateInput!]
    claims_namespace: String
    claims_namespace_path: String
}

input ConfigJWTSecretInsertInput {
    type: String
    key: String
    jwk_url: ConfigUrl
    claims_format: String
    audience: String
    issuer: String
    allowed_skew: ConfigUint32
    header: String
        claims_map: [ConfigClaimMapInsertInput!]
    claims_namespace: String
    claims_namespace_path: String
}

input ConfigJWTSecretComparisonExp {
    _and: [ConfigJWTSecretComparisonExp!]
    _not: ConfigJWTSecretComparisonExp
    _or: [ConfigJWTSecretComparisonExp!]
    type: ConfigStringComparisonExp
    key: ConfigStringComparisonExp
    jwk_url: ConfigUrlComparisonExp
    claims_format: ConfigStringComparisonExp
    audience: ConfigStringComparisonExp
    issuer: ConfigStringComparisonExp
    allowed_skew: ConfigUint32ComparisonExp
    header: ConfigStringComparisonExp
    claims_map: ConfigClaimMapComparisonExp
    claims_namespace: ConfigStringComparisonExp
    claims_namespace_path: ConfigStringComparisonExp
}

scalar ConfigLocale

input ConfigLocaleComparisonExp {
    _eq: ConfigLocale
    _neq: ConfigLocale
    _in: [ConfigLocale!]
    _nin: [ConfigLocale!]
}

"""

"""
type ConfigObservability {
    """

    """
    grafana: ConfigGrafana!
}

input ConfigObservabilityUpdateInput {
    grafana: ConfigGrafanaUpdateInput
}

input ConfigObservabilityInsertInput {
    grafana: ConfigGrafanaInsertInput!
}

input ConfigObservabilityComparisonExp {
    _and: [ConfigObservabilityComparisonExp!]
    _not: ConfigObservabilityComparisonExp
    _or: [ConfigObservabilityComparisonExp!]
    grafana: ConfigGrafanaComparisonExp
}

scalar ConfigPort

input ConfigPortComparisonExp {
    _eq: ConfigPort
    _neq: ConfigPort
    _in: [ConfigPort!]
    _nin: [ConfigPort!]
}

"""
Configuration for postgres service
"""
type ConfigPostgres {
    """
    Version of postgres, you can see available versions in the URL below:
    https://hub.docker.com/r/nhost/postgres/tags
    """
    version: String
    """
    Resources for the service
    """
    resources: ConfigResources
    """

    """
    settings: ConfigPostgresSettings
}

input ConfigPostgresUpdateInput {
    version: String
    resources: ConfigResourcesUpdateInput
    settings: ConfigPostgresSettingsUpdateInput
}

input ConfigPostgresInsertInput {
    version: String
    resources: ConfigResourcesInsertInput
    settings: ConfigPostgresSettingsInsertInput
}

input ConfigPostgresComparisonExp {
    _and: [ConfigPostgresComparisonExp!]
    _not: ConfigPostgresComparisonExp
    _or: [ConfigPostgresComparisonExp!]
    version: ConfigStringComparisonExp
    resources: ConfigResourcesComparisonExp
    settings: ConfigPostgresSettingsComparisonExp
}

"""

"""
type ConfigPostgresSettings {
    """

    """
    jit: String
    """

    """
    maxConnections: ConfigInt32
    """

    """
    sharedBuffers: String
    """

    """
    effectiveCacheSize: String
    """

    """
    maintenanceWorkMem: String
    """

    """
    checkpointCompletionTarget: Float
    """

    """
    walBuffers: String
    """

    """
    defaultStatisticsTarget: ConfigInt32
    """

    """
    randomPageCost: Float
    """

    """
    effectiveIOConcurrency: ConfigInt32
    """

    """
    workMem: String
    """

    """
    hugePages: String
    """

    """
    minWalSize: String
    """

    """
    maxWalSize: String
    """

    """
    maxWorkerProcesses: ConfigInt32
    """

    """
    maxParallelWorkersPerGather: ConfigInt32
    """

    """
    maxParallelWorkers: ConfigInt32
    """

    """
    maxParallelMaintenanceWorkers: ConfigInt32
}

input ConfigPostgresSettingsUpdateInput {
    jit: String
    maxConnections: ConfigInt32
    sharedBuffers: String
    effectiveCacheSize: String
    maintenanceWorkMem: String
    checkpointCompletionTarget: Float
    walBuffers: String
    defaultStatisticsTarget: ConfigInt32
    randomPageCost: Float
    effectiveIOConcurrency: ConfigInt32
    workMem: String
    hugePages: String
    minWalSize: String
    maxWalSize: String
    maxWorkerProcesses: ConfigInt32
    maxParallelWorkersPerGather: ConfigInt32
    maxParallelWorkers: ConfigInt32
    maxParallelMaintenanceWorkers: ConfigInt32
}

input ConfigPostgresSettingsInsertInput {
    jit: String
    maxConnections: ConfigInt32
    sharedBuffers: String
    effectiveCacheSize: String
    maintenanceWorkMem: String
    checkpointCompletionTarget: Float
    walBuffers: String
    defaultStatisticsTarget: ConfigInt32
    randomPageCost: Float
    effectiveIOConcurrency: ConfigInt32
    workMem: String
    hugePages: String
    minWalSize: String
    maxWalSize: String
    maxWorkerProcesses: ConfigInt32
    maxParallelWorkersPerGather: ConfigInt32
    maxParallelWorkers: ConfigInt32
    maxParallelMaintenanceWorkers: ConfigInt32
}

input ConfigPostgresSettingsComparisonExp {
    _and: [ConfigPostgresSettingsComparisonExp!]
    _not: ConfigPostgresSettingsComparisonExp
    _or: [ConfigPostgresSettingsComparisonExp!]
    jit: ConfigStringComparisonExp
    maxConnections: ConfigInt32ComparisonExp
    sharedBuffers: ConfigStringComparisonExp
    effectiveCacheSize: ConfigStringComparisonExp
    maintenanceWorkMem: ConfigStringComparisonExp
    checkpointCompletionTarget: ConfigFloatComparisonExp
    walBuffers: ConfigStringComparisonExp
    defaultStatisticsTarget: ConfigInt32ComparisonExp
    randomPageCost: ConfigFloatComparisonExp
    effectiveIOConcurrency: ConfigInt32ComparisonExp
    workMem: ConfigStringComparisonExp
    hugePages: ConfigStringComparisonExp
    minWalSize: ConfigStringComparisonExp
    maxWalSize: ConfigStringComparisonExp
    maxWorkerProcesses: ConfigInt32ComparisonExp
    maxParallelWorkersPerGather: ConfigInt32ComparisonExp
    maxParallelWorkers: ConfigInt32ComparisonExp
    maxParallelMaintenanceWorkers: ConfigInt32ComparisonExp
}

"""

"""
type ConfigProvider {
    """

    """
    smtp: ConfigSmtp
    """

    """
    sms: ConfigSms
}

input ConfigProviderUpdateInput {
    smtp: ConfigSmtpUpdateInput
    sms: ConfigSmsUpdateInput
}

input ConfigProviderInsertInput {
    smtp: ConfigSmtpInsertInput
    sms: ConfigSmsInsertInput
}

input ConfigProviderComparisonExp {
    _and: [ConfigProviderComparisonExp!]
    _not: ConfigProviderComparisonExp
    _or: [ConfigProviderComparisonExp!]
    smtp: ConfigSmtpComparisonExp
    sms: ConfigSmsComparisonExp
}

"""
Resource configuration for a service
"""
type ConfigResources {
    """

    """
    compute: ConfigResourcesCompute!
    """
    Number of replicas for a service
    """
    replicas: ConfigUint8!
}

input ConfigResourcesUpdateInput {
    compute: ConfigResourcesComputeUpdateInput
    replicas: ConfigUint8
}

input ConfigResourcesInsertInput {
    compute: ConfigResourcesComputeInsertInput!
    replicas: ConfigUint8!
}

input ConfigResourcesComparisonExp {
    _and: [ConfigResourcesComparisonExp!]
    _not: ConfigResourcesComparisonExp
    _or: [ConfigResourcesComparisonExp!]
    compute: ConfigResourcesComputeComparisonExp
    replicas: ConfigUint8ComparisonExp
}

"""

"""
type ConfigResourcesCompute {
    """
    milicpus, 1000 milicpus = 1 cpu
    """
    cpu: ConfigUint32!
    """
    MiB: 128MiB to 30GiB
    """
    memory: ConfigUint32!
}

input ConfigResourcesComputeUpdateInput {
    cpu: ConfigUint32
    memory: ConfigUint32
}

input ConfigResourcesComputeInsertInput {
    cpu: ConfigUint32!
    memory: ConfigUint32!
}

input ConfigResourcesComputeComparisonExp {
    _and: [ConfigResourcesComputeComparisonExp!]
    _not: ConfigResourcesComputeComparisonExp
    _or: [ConfigResourcesComputeComparisonExp!]
    cpu: ConfigUint32ComparisonExp
    memory: ConfigUint32ComparisonExp
}

"""

"""
type ConfigRunServiceConfig {
    """

    """
    name: ConfigRunServiceName!
    """

    """
    image: ConfigRunServiceImage!
    """

    """
    command: [String!]
    """

    """
    environment: [ConfigEnvironmentVariable!]
    """

    """
    ports: [ConfigRunServicePort!]
    """

    """
    resources: ConfigRunServiceResources!
}

input ConfigRunServiceConfigUpdateInput {
    name: ConfigRunServiceName
    image: ConfigRunServiceImageUpdateInput
        command: [String!]
        environment: [ConfigEnvironmentVariableUpdateInput!]
        ports: [ConfigRunServicePortUpdateInput!]
    resources: ConfigRunServiceResourcesUpdateInput
}

input ConfigRunServiceConfigInsertInput {
    name: ConfigRunServiceName!
    image: ConfigRunServiceImageInsertInput!
        command: [String!]
        environment: [ConfigEnvironmentVariableInsertInput!]
        ports: [ConfigRunServicePortInsertInput!]
    resources: ConfigRunServiceResourcesInsertInput!
}

input ConfigRunServiceConfigComparisonExp {
    _and: [ConfigRunServiceConfigComparisonExp!]
    _not: ConfigRunServiceConfigComparisonExp
    _or: [ConfigRunServiceConfigComparisonExp!]
    name: ConfigRunServiceNameComparisonExp
    image: ConfigRunServiceImageComparisonExp
    command: ConfigStringComparisonExp
    environment: ConfigEnvironmentVariableComparisonExp
    ports: ConfigRunServicePortComparisonExp
    resources: ConfigRunServiceResourcesComparisonExp
}

"""

"""
type ConfigRunServiceImage {
    """

    """
    image: String!
}

input ConfigRunServiceImageUpdateInput {
    image: String
}

input ConfigRunServiceImageInsertInput {
    image: String!
}

input ConfigRunServiceImageComparisonExp {
    _and: [ConfigRunServiceImageComparisonExp!]
    _not: ConfigRunServiceImageComparisonExp
    _or: [ConfigRunServiceImageComparisonExp!]
    image: ConfigStringComparisonExp
}

scalar ConfigRunServiceName

input ConfigRunServiceNameComparisonExp {
    _eq: ConfigRunServiceName
    _neq: ConfigRunServiceName
    _in: [ConfigRunServiceName!]
    _nin: [ConfigRunServiceName!]
}

"""

"""
type ConfigRunServicePort {
    """

    """
    port: ConfigPort!
    """

    """
    type: String!
    """

    """
    publish: Boolean
}

input ConfigRunServicePortUpdateInput {
    port: ConfigPort
    type: String
    publish: Boolean
}

input ConfigRunServicePortInsertInput {
    port: ConfigPort!
    type: String!
    publish: Boolean
}

input ConfigRunServicePortComparisonExp {
    _and: [ConfigRunServicePortComparisonExp!]
    _not: ConfigRunServicePortComparisonExp
    _or: [ConfigRunServicePortComparisonExp!]
    port: ConfigPortComparisonExp
    type: ConfigStringComparisonExp
    publish: ConfigBooleanComparisonExp
}

"""
Resource configuration for a service
"""
type ConfigRunServiceResources {
    """

    """
    compute: ConfigRunServiceResourcesCompute!
    """

    """
    storage: [ConfigRunServiceResourcesStorage!]
    """
    Number of replicas for a service
    """
    replicas: ConfigUint8!
}

input ConfigRunServiceResourcesUpdateInput {
    compute: ConfigRunServiceResourcesComputeUpdateInput
        storage: [ConfigRunServiceResourcesStorageUpdateInput!]
    replicas: ConfigUint8
}

input ConfigRunServiceResourcesInsertInput {
    compute: ConfigRunServiceResourcesComputeInsertInput!
        storage: [ConfigRunServiceResourcesStorageInsertInput!]
    replicas: ConfigUint8!
}

input ConfigRunServiceResourcesComparisonExp {
    _and: [ConfigRunServiceResourcesComparisonExp!]
    _not: ConfigRunServiceResourcesComparisonExp
    _or: [ConfigRunServiceResourcesComparisonExp!]
    compute: ConfigRunServiceResourcesComputeComparisonExp
    storage: ConfigRunServiceResourcesStorageComparisonExp
    replicas: ConfigUint8ComparisonExp
}

"""

"""
type ConfigRunServiceResourcesCompute {
    """
    milicpus, 1000 milicpus = 1 cpu
    """
    cpu: ConfigUint32!
    """
    MiB: 128MiB to 30GiB
    """
    memory: ConfigUint32!
}

input ConfigRunServiceResourcesComputeUpdateInput {
    cpu: ConfigUint32
    memory: ConfigUint32
}

input ConfigRunServiceResourcesComputeInsertInput {
    cpu: ConfigUint32!
    memory: ConfigUint32!
}

input ConfigRunServiceResourcesComputeComparisonExp {
    _and: [ConfigRunServiceResourcesComputeComparisonExp!]
    _not: ConfigRunServiceResourcesComputeComparisonExp
    _or: [ConfigRunServiceResourcesComputeComparisonExp!]
    cpu: ConfigUint32ComparisonExp
    memory: ConfigUint32ComparisonExp
}

"""

"""
type ConfigRunServiceResourcesStorage {
    """
    name of the volume, changing it will cause data loss
    """
    name: ConfigRunServiceName!
    """
    GiB
    """
    capacity: ConfigUint32!
    """

    """
    path: String!
}

input ConfigRunServiceResourcesStorageUpdateInput {
    name: ConfigRunServiceName
    capacity: ConfigUint32
    path: String
}

input ConfigRunServiceResourcesStorageInsertInput {
    name: ConfigRunServiceName!
    capacity: ConfigUint32!
    path: String!
}

input ConfigRunServiceResourcesStorageComparisonExp {
    _and: [ConfigRunServiceResourcesStorageComparisonExp!]
    _not: ConfigRunServiceResourcesStorageComparisonExp
    _or: [ConfigRunServiceResourcesStorageComparisonExp!]
    name: ConfigRunServiceNameComparisonExp
    capacity: ConfigUint32ComparisonExp
    path: ConfigStringComparisonExp
}

"""

"""
type ConfigSms {
    """

    """
    provider: String
    """

    """
    accountSid: String!
    """

    """
    authToken: String!
    """

    """
    messagingServiceId: String!
}

input ConfigSmsUpdateInput {
    provider: String
    accountSid: String
    authToken: String
    messagingServiceId: String
}

input ConfigSmsInsertInput {
    provider: String
    accountSid: String!
    authToken: String!
    messagingServiceId: String!
}

input ConfigSmsComparisonExp {
    _and: [ConfigSmsComparisonExp!]
    _not: ConfigSmsComparisonExp
    _or: [ConfigSmsComparisonExp!]
    provider: ConfigStringComparisonExp
    accountSid: ConfigStringComparisonExp
    authToken: ConfigStringComparisonExp
    messagingServiceId: ConfigStringComparisonExp
}

"""

"""
type ConfigSmtp {
    """

    """
    user: String!
    """

    """
    password: String!
    """

    """
    sender: String!
    """

    """
    host: String!
    """

    """
    port: ConfigPort!
    """

    """
    secure: Boolean!
    """

    """
    method: String!
}

input ConfigSmtpUpdateInput {
    user: String
    password: String
    sender: String
    host: String
    port: ConfigPort
    secure: Boolean
    method: String
}

input ConfigSmtpInsertInput {
    user: String!
    password: String!
    sender: String!
    host: String!
    port: ConfigPort!
    secure: Boolean!
    method: String!
}

input ConfigSmtpComparisonExp {
    _and: [ConfigSmtpComparisonExp!]
    _not: ConfigSmtpComparisonExp
    _or: [ConfigSmtpComparisonExp!]
    user: ConfigStringComparisonExp
    password: ConfigStringComparisonExp
    sender: ConfigStringComparisonExp
    host: ConfigStringComparisonExp
    port: ConfigPortComparisonExp
    secure: ConfigBooleanComparisonExp
    method: ConfigStringComparisonExp
}

"""

"""
type ConfigStandardOauthProvider {
    """

    """
    enabled: Boolean
    """

    """
    clientId: String
    """

    """
    clientSecret: String
}

input ConfigStandardOauthProviderUpdateInput {
    enabled: Boolean
    clientId: String
    clientSecret: String
}

input ConfigStandardOauthProviderInsertInput {
    enabled: Boolean
    clientId: String
    clientSecret: String
}

input ConfigStandardOauthProviderComparisonExp {
    _and: [ConfigStandardOauthProviderComparisonExp!]
    _not: ConfigStandardOauthProviderComparisonExp
    _or: [ConfigStandardOauthProviderComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    clientId: ConfigStringComparisonExp
    clientSecret: ConfigStringComparisonExp
}

"""

"""
type ConfigStandardOauthProviderWithScope {
    """

    """
    enabled: Boolean
    """

    """
    clientId: String
    """

    """
    scope: [String!]
    """

    """
    clientSecret: String
}

input ConfigStandardOauthProviderWithScopeUpdateInput {
    enabled: Boolean
    clientId: String
        scope: [String!]
    clientSecret: String
}

input ConfigStandardOauthProviderWithScopeInsertInput {
    enabled: Boolean
    clientId: String
        scope: [String!]
    clientSecret: String
}

input ConfigStandardOauthProviderWithScopeComparisonExp {
    _and: [ConfigStandardOauthProviderWithScopeComparisonExp!]
    _not: ConfigStandardOauthProviderWithScopeComparisonExp
    _or: [ConfigStandardOauthProviderWithScopeComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    clientId: ConfigStringComparisonExp
    scope: ConfigStringComparisonExp
    clientSecret: ConfigStringComparisonExp
}

"""
Configuration for storage service
"""
type ConfigStorage {
    """
    Version of storage service, you can see available versions in the URL below:
    https://hub.docker.com/r/nhost/hasura-storage/tags
    
    Releases:
    
    https://github.com/nhost/hasura-storage/releases
    """
    version: String
    """
    Resources for the service
    """
    resources: ConfigResources
    """

    """
    antivirus: ConfigStorageAntivirus
}

input ConfigStorageUpdateInput {
    version: String
    resources: ConfigResourcesUpdateInput
    antivirus: ConfigStorageAntivirusUpdateInput
}

input ConfigStorageInsertInput {
    version: String
    resources: ConfigResourcesInsertInput
    antivirus: ConfigStorageAntivirusInsertInput
}

input ConfigStorageComparisonExp {
    _and: [ConfigStorageComparisonExp!]
    _not: ConfigStorageComparisonExp
    _or: [ConfigStorageComparisonExp!]
    version: ConfigStringComparisonExp
    resources: ConfigResourcesComparisonExp
    antivirus: ConfigStorageAntivirusComparisonExp
}

"""

"""
type ConfigStorageAntivirus {
    """

    """
    server: String
}

input ConfigStorageAntivirusUpdateInput {
    server: String
}

input ConfigStorageAntivirusInsertInput {
    server: String
}

input ConfigStorageAntivirusComparisonExp {
    _and: [ConfigStorageAntivirusComparisonExp!]
    _not: ConfigStorageAntivirusComparisonExp
    _or: [ConfigStorageAntivirusComparisonExp!]
    server: ConfigStringComparisonExp
}

"""

"""
type ConfigSystemConfig {
    """

    """
    auth: ConfigSystemConfigAuth
    """

    """
    postgres: ConfigSystemConfigPostgres!
}

input ConfigSystemConfigUpdateInput {
    auth: ConfigSystemConfigAuthUpdateInput
    postgres: ConfigSystemConfigPostgresUpdateInput
}

input ConfigSystemConfigInsertInput {
    auth: ConfigSystemConfigAuthInsertInput
    postgres: ConfigSystemConfigPostgresInsertInput!
}

input ConfigSystemConfigComparisonExp {
    _and: [ConfigSystemConfigComparisonExp!]
    _not: ConfigSystemConfigComparisonExp
    _or: [ConfigSystemConfigComparisonExp!]
    auth: ConfigSystemConfigAuthComparisonExp
    postgres: ConfigSystemConfigPostgresComparisonExp
}

"""

"""
type ConfigSystemConfigAuth {
    """

    """
    email: ConfigSystemConfigAuthEmail
}

input ConfigSystemConfigAuthUpdateInput {
    email: ConfigSystemConfigAuthEmailUpdateInput
}

input ConfigSystemConfigAuthInsertInput {
    email: ConfigSystemConfigAuthEmailInsertInput
}

input ConfigSystemConfigAuthComparisonExp {
    _and: [ConfigSystemConfigAuthComparisonExp!]
    _not: ConfigSystemConfigAuthComparisonExp
    _or: [ConfigSystemConfigAuthComparisonExp!]
    email: ConfigSystemConfigAuthEmailComparisonExp
}

"""

"""
type ConfigSystemConfigAuthEmail {
    """

    """
    templates: ConfigSystemConfigAuthEmailTemplates
}

input ConfigSystemConfigAuthEmailUpdateInput {
    templates: ConfigSystemConfigAuthEmailTemplatesUpdateInput
}

input ConfigSystemConfigAuthEmailInsertInput {
    templates: ConfigSystemConfigAuthEmailTemplatesInsertInput
}

input ConfigSystemConfigAuthEmailComparisonExp {
    _and: [ConfigSystemConfigAuthEmailComparisonExp!]
    _not: ConfigSystemConfigAuthEmailComparisonExp
    _or: [ConfigSystemConfigAuthEmailComparisonExp!]
    templates: ConfigSystemConfigAuthEmailTemplatesComparisonExp
}

"""

"""
type ConfigSystemConfigAuthEmailTemplates {
    """

    """
    s3Key: String
}

input ConfigSystemConfigAuthEmailTemplatesUpdateInput {
    s3Key: String
}

input ConfigSystemConfigAuthEmailTemplatesInsertInput {
    s3Key: String
}

input ConfigSystemConfigAuthEmailTemplatesComparisonExp {
    _and: [ConfigSystemConfigAuthEmailTemplatesComparisonExp!]
    _not: ConfigSystemConfigAuthEmailTemplatesComparisonExp
    _or: [ConfigSystemConfigAuthEmailTemplatesComparisonExp!]
    s3Key: ConfigStringComparisonExp
}

"""

"""
type ConfigSystemConfigPostgres {
    """

    """
    enabled: Boolean
    """

    """
    database: String!
    """

    """
    connectionString: ConfigSystemConfigPostgresConnectionString!
}

input ConfigSystemConfigPostgresUpdateInput {
    enabled: Boolean
    database: String
    connectionString: ConfigSystemConfigPostgresConnectionStringUpdateInput
}

input ConfigSystemConfigPostgresInsertInput {
    enabled: Boolean
    database: String!
    connectionString: ConfigSystemConfigPostgresConnectionStringInsertInput!
}

input ConfigSystemConfigPostgresComparisonExp {
    _and: [ConfigSystemConfigPostgresComparisonExp!]
    _not: ConfigSystemConfigPostgresComparisonExp
    _or: [ConfigSystemConfigPostgresComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    database: ConfigStringComparisonExp
    connectionString: ConfigSystemConfigPostgresConnectionStringComparisonExp
}

"""

"""
type ConfigSystemConfigPostgresConnectionString {
    """

    """
    backup: String!
    """

    """
    hasura: String!
    """

    """
    auth: String!
    """

    """
    storage: String!
}

input ConfigSystemConfigPostgresConnectionStringUpdateInput {
    backup: String
    hasura: String
    auth: String
    storage: String
}

input ConfigSystemConfigPostgresConnectionStringInsertInput {
    backup: String!
    hasura: String!
    auth: String!
    storage: String!
}

input ConfigSystemConfigPostgresConnectionStringComparisonExp {
    _and: [ConfigSystemConfigPostgresConnectionStringComparisonExp!]
    _not: ConfigSystemConfigPostgresConnectionStringComparisonExp
    _or: [ConfigSystemConfigPostgresConnectionStringComparisonExp!]
    backup: ConfigStringComparisonExp
    hasura: ConfigStringComparisonExp
    auth: ConfigStringComparisonExp
    storage: ConfigStringComparisonExp
}

scalar ConfigUrl

input ConfigUrlComparisonExp {
    _eq: ConfigUrl
    _neq: ConfigUrl
    _in: [ConfigUrl!]
    _nin: [ConfigUrl!]
}

scalar ConfigUserRole

input ConfigUserRoleComparisonExp {
    _eq: ConfigUserRole
    _neq: ConfigUserRole
    _in: [ConfigUserRole!]
    _nin: [ConfigUserRole!]
}